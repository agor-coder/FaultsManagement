<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <h:head>
        <title> #{msg['app.name']}</title>          
    </h:head>
    <h:body style="padding-top: 60px">

        <b:navBar brand="#{msg['app.name']}" brandHref="/fm/faces/index.xhtml"    inverse="true" fixed="top" fluid="true"  > 
            <h:form styleClass="navbar-form navbar-right">
                <div class="form-group">
                    <h:outputLabel value="**${editAccountController.userName}**" style="color: #fff" />  
                </div>  
                <b:commandButton action="#{contextUtils.invalidateSession()}" value="#{msg['menu.closeSession']}" look= "info" icon="log-out" rendered="#{not empty request.remoteUser}"/>
                <b:commandButton action="authenticate"  value="#{msg['action.login']}"   look="success" icon="log-in"   rendered="#{empty request.remoteUser}" />
            </h:form>
        </b:navBar>

        <b:container fluid="true">
            <b:row>
                <b:column col-sm="3" col-md="2" styleClass="sidebar">
                    <b:navLink header="#{msg['MENU']}" style="color: #009966" rendered="#{not empty request.remoteUser}"/>
                    <b:listLinks rendered="#{request.isUserInRole('AppAdmin')}">
                        <b:navLink header ="***#{msg['menu.accounts']}"   style="color: chocolate"/>
                        <b:navLink outcome ="accountList" value="#{msg['menu.accounts.list']}" />
                        <b:navLink outcome = "newAdmin" value="#{msg['menu.accounts.createadmin']}" />
                        <b:navLink outcome ="newSpecialist" value="#{msg['menu.accounts.createspecialist']}" />
                        <b:navLink outcome ="newNotifier" value="#{msg['menu.accounts.createnotifier']}" />
                        <b:navLink outcome ="newAssigner" value="#{msg['menu.accounts.createassigner']}" />
                    </b:listLinks>
                    <b:listLinks>
                        <b:navLink header="***#{msg['menu.faults']}"  style="color: chocolate"  
                                   rendered="#{not request.isUserInRole('AppAdmin') and (not empty request.remoteUser)}"/>
                        <b:navLink outcome ="faultList" value="#{msg['menu.faults.list']}"  rendered="#{request.isUserInRole('Assigner')}"/>
                        <b:navLink outcome ="areaList" value="#{msg['menu.areas']}" rendered="#{request.isUserInRole('Assigner')}" />
                        <b:navLink outcome ="newFault" value="#{msg['menu.faults.add']}" rendered="#{request.isUserInRole('Notifier')}"/>
                        <b:navLink outcome ="notifierFaultList" value="#{msg['menu.faults.notifier']}"  rendered="#{request.isUserInRole('Notifier')}" />
                        <b:navLink outcome ="specFaultList" value="#{msg['menu.faults.spec']}"  rendered="#{request.isUserInRole('Specialist')}"/>
                    </b:listLinks>
                    <b:listLinks rendered="#{not empty request.remoteUser}" >
                        <b:navLink header="***${msg['menu.user.name']}   ${editAccountController.userName}" style="color: chocolate"/>
                        <b:navLink outcome ="changeMyPassword" value="#{msg['menu.accounts.changePassword']}" />
                        <b:navLink outcome ="accountData" value="#{msg['menu.accounts.details']}" /> 
                    </b:listLinks>
                </b:column>

                <b:column col-sm="9" offset-sm="3" col-md="10" offset="2" styleClass="main">
                    <h1>#{msg['action.login']}</h1>
                    <b:jumbotron >
                        <h:form id="newFaultConfirm">
                            <h:outputLabel value="#{msg['fault.describe']}" for="describe" style="color: #0033cc" /><br />
                            <h:outputText value="#{newFaultController.newFaultDTO.faultDescribe}"  /><b:message for="describe"  /><br />

                            <h:outputLabel value="#{msg['fault.area']} - " for="area" style="color: #0033cc" /><br />
                            <h:outputText value="#{newFaultController.areaDTO.areaName}"  id="area"  />  <b:message for="area" /><br />


                            <b:commandButton value="${msg['action.save']}"   action="#{newFaultController.addFault()}" 
                                             rendered="#{not newFaultController.success}"/>
                            <b:commandButton value="${msg['action.correct']}" action="#{newFaultController.cancel()}" 
                                             immediate="true" look="warning"  rendered="#{not newFaultController.success}"/>
                            <!--<h:messages/>-->
                        </h:form>
                    </b:jumbotron>
                    <c:if test="#{newFaultController.success}">
                        <b:alert severity="success"><strong>${msg['general.success.message']}</strong> </b:alert>
                    </c:if>
                    <b:messages global-only="true" />
                </b:column>

            </b:row>
        </b:container> 
        <style type="text/css">
            .jumbotron{
                background-color: #addfbb; 
                font-size: medium;
                font-weight: 600;
                font-style: italic;
            }
            .sub-header {
                border-bottom: 1px solid #eee;
                padding-bottom: 10px;
            }
            .navbar-fixed-top {
                background-color: #237038;;
                border: 0 none;

            }
            .sidebar {
                display: none;
            }
            @media (min-width: 768px) {
                .sidebar {
                    background-color: #addfbb;;
                    border-right: 1px solid #eee;
                    bottom: 0;
                    display: block;
                    left: 0;
                    overflow-x: hidden;
                    overflow-y: auto;
                    padding: 20px;
                    position: fixed;
                    top: 51px;
                    z-index: 1000;
                }
            }
            .nav-list {
                font-family: sans-serif;
                font-size: initial;
                font-style: oblique;
                font-weight: bold;
                margin-bottom: 20px;
                margin-left: -20px;
                margin-right: -21px;
            }
            .nav-list > li {
                font-family: sans-serif;
                font-size: small;
                font-style: oblique;
                font-weight: bold;
                line-height: 1.0;

            }
            .nav-list > li > a {
                padding-left: 20px;
                padding-right: 20px;
            }
            .nav-list > .active > a, .nav-sidebar > .active > a:hover, .nav-sidebar > .active > a:focus {
                background-color:  #fff;
            }
            .main {
                padding: 20px;
            }
            @media (min-width: 768px) {
                .main {
                    padding-left: 50px;
                    padding-right: 40px;

                }
            }
            .main .page-header {
                margin-top: 0;
            }
            .placeholders {
                margin-bottom: 30px;
                text-align: center;
            }
            .placeholders h4 {
                margin-bottom: 0;
            }
            .placeholder {
                margin-bottom: 20px;
            }
            .placeholder img {
                border-radius: 50%;
                display: inline-block;
            }
        </style>
    </h:body>
</html>